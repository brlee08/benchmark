name: "ResNet"
layer {
  name: "data"
  type: "DummyData"
  top: "data"
  include {
    phase: TRAIN
  }
  dummy_data_param {
    shape: { dim: REPLACEBATCHSIZE dim: 3 dim: 224 dim: 224 }
    data_filler: { type: 'constant' value: 0.001 }
  }
}
layer {
  name: "label_data"
  type: "DummyData"
  top: "label"
  include {
    phase: TRAIN
  }
  dummy_data_param {
    shape: { dim: REPLACEBATCHSIZE}
    data_filler: { type: 'constant' value: 0.001 }
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 64
    kernel_size: 7
    stride: 2
    pad: 3
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "conv1_bn"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "conv1_relu"
  type: "ReLU"
  bottom: "conv1_bn"
  top: "conv1_bn"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_bn"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
#
# ResBlock2
#
layer {
  name: "res2.1.conv1"
  type: "Convolution"
  bottom: "pool1"
  top: "res2.1.conv1"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res2.1.conv1_bn"
  type: "BatchNorm"
  bottom: "res2.1.conv1"
  top: "res2.1.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.1.conv1_relu"
  type: "ReLU"
  bottom: "res2.1.conv1_bn"
  top: "res2.1.conv1_bn"
}
layer {
  name: "res2.1.conv2"
  type: "Convolution"
  bottom: "res2.1.conv1_bn"
  top: "res2.1.conv2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res2.1.conv2_bn"
  type: "BatchNorm"
  bottom: "res2.1.conv2"
  top: "res2.1.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.1.conv2_relu"
  type: "ReLU"
  bottom: "res2.1.conv2_bn"
  top: "res2.1.conv2_bn"
}
layer {
  name: "res2.1.conv3"
  type: "Convolution"
  bottom: "res2.1.conv2_bn"
  top: "res2.1.conv3"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res2.1.conv3_bn"
  type: "BatchNorm"
  bottom: "res2.1.conv3"
  top: "res2.1.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.1.skipConv"
  type: "Convolution"
  bottom: "pool1"
  top: "res2.1.skipConv"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res2.1.skipConv_bn"
  type: "BatchNorm"
  bottom: "res2.1.skipConv"
  top: "res2.1.skipConv_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.1.eltwise"
  type: "Eltwise"
  bottom: "res2.1.conv3_bn"
  bottom: "res2.1.skipConv_bn"
  top: "res2.1.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2.1.relu"
  type: "ReLU"
  bottom: "res2.1.eltwise"
  top: "res2.1.eltwise"
}
layer {
  name: "res2.2.conv1"
  type: "Convolution"
  bottom: "res2.1.eltwise"
  top: "res2.2.conv1"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res2.2.conv1_bn"
  type: "BatchNorm"
  bottom: "res2.2.conv1"
  top: "res2.2.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.2.conv1_relu"
  type: "ReLU"
  bottom: "res2.2.conv1_bn"
  top: "res2.2.conv1_bn"
}
layer {
  name: "res2.2.conv2"
  type: "Convolution"
  bottom: "res2.2.conv1_bn"
  top: "res2.2.conv2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res2.2.conv2_bn"
  type: "BatchNorm"
  bottom: "res2.2.conv2"
  top: "res2.2.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.2.conv2_relu"
  type: "ReLU"
  bottom: "res2.2.conv2_bn"
  top: "res2.2.conv2_bn"
}
layer {
  name: "res2.2.conv3"
  type: "Convolution"
  bottom: "res2.2.conv2_bn"
  top: "res2.2.conv3"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res2.2.conv3_bn"
  type: "BatchNorm"
  bottom: "res2.2.conv3"
  top: "res2.2.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.2.skipConv"
  type: "Convolution"
  bottom: "res2.1.eltwise"
  top: "res2.2.skipConv"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res2.2.skipConv_bn"
  type: "BatchNorm"
  bottom: "res2.2.skipConv"
  top: "res2.2.skipConv_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.2.eltwise"
  type: "Eltwise"
  bottom: "res2.2.conv3_bn"
  bottom: "res2.2.skipConv_bn"
  top: "res2.2.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2.2.relu"
  type: "ReLU"
  bottom: "res2.2.eltwise"
  top: "res2.2.eltwise"
}
layer {
  name: "res2.3.conv1"
  type: "Convolution"
  bottom: "res2.2.eltwise"
  top: "res2.3.conv1"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res2.3.conv1_bn"
  type: "BatchNorm"
  bottom: "res2.3.conv1"
  top: "res2.3.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.3.conv1_relu"
  type: "ReLU"
  bottom: "res2.3.conv1_bn"
  top: "res2.3.conv1_bn"
}
layer {
  name: "res2.3.conv2"
  type: "Convolution"
  bottom: "res2.3.conv1_bn"
  top: "res2.3.conv2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res2.3.conv2_bn"
  type: "BatchNorm"
  bottom: "res2.3.conv2"
  top: "res2.3.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.3.conv2_relu"
  type: "ReLU"
  bottom: "res2.3.conv2_bn"
  top: "res2.3.conv2_bn"
}
layer {
  name: "res2.3.conv3"
  type: "Convolution"
  bottom: "res2.3.conv2_bn"
  top: "res2.3.conv3"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res2.3.conv3_bn"
  type: "BatchNorm"
  bottom: "res2.3.conv3"
  top: "res2.3.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.3.skipConv"
  type: "Convolution"
  bottom: "res2.2.eltwise"
  top: "res2.3.skipConv"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res2.3.skipConv_bn"
  type: "BatchNorm"
  bottom: "res2.3.skipConv"
  top: "res2.3.skipConv_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.3.eltwise"
  type: "Eltwise"
  bottom: "res2.3.conv3_bn"
  bottom: "res2.3.skipConv_bn"
  top: "res2.3.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2.3.relu"
  type: "ReLU"
  bottom: "res2.3.eltwise"
  top: "res2.3.eltwise"
}
#
# ResBlock3
#
layer {
  name: "res3.1.conv1"
  type: "Convolution"
  bottom: "res2.3.eltwise"
  top: "res3.1.conv1"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 2
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.1.conv1_bn"
  type: "BatchNorm"
  bottom: "res3.1.conv1"
  top: "res3.1.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.1.conv1_relu"
  type: "ReLU"
  bottom: "res3.1.conv1_bn"
  top: "res3.1.conv1_bn"
}
layer {
  name: "res3.1.conv2"
  type: "Convolution"
  bottom: "res3.1.conv1_bn"
  top: "res3.1.conv2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.1.conv2_bn"
  type: "BatchNorm"
  bottom: "res3.1.conv2"
  top: "res3.1.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.1.conv2_relu"
  type: "ReLU"
  bottom: "res3.1.conv2_bn"
  top: "res3.1.conv2_bn"
}
layer {
  name: "res3.1.conv3"
  type: "Convolution"
  bottom: "res3.1.conv2_bn"
  top: "res3.1.conv3"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.1.conv3_bn"
  type: "BatchNorm"
  bottom: "res3.1.conv3"
  top: "res3.1.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.1.skipConv"
  type: "Convolution"
  bottom: "res2.3.eltwise"
  top: "res3.1.skipConv"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 2
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.1.skipConv_bn"
  type: "BatchNorm"
  bottom: "res3.1.skipConv"
  top: "res3.1.skipConv_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.1.eltwise"
  type: "Eltwise"
  bottom: "res3.1.conv3_bn"
  bottom: "res3.1.skipConv_bn"
  top: "res3.1.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3.1.relu"
  type: "ReLU"
  bottom: "res3.1.eltwise"
  top: "res3.1.eltwise"
}
layer {
  name: "res3.2.conv1"
  type: "Convolution"
  bottom: "res3.1.eltwise"
  top: "res3.2.conv1"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.2.conv1_bn"
  type: "BatchNorm"
  bottom: "res3.2.conv1"
  top: "res3.2.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.2.conv1_relu"
  type: "ReLU"
  bottom: "res3.2.conv1_bn"
  top: "res3.2.conv1_bn"
}
layer {
  name: "res3.2.conv2"
  type: "Convolution"
  bottom: "res3.2.conv1_bn"
  top: "res3.2.conv2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.2.conv2_bn"
  type: "BatchNorm"
  bottom: "res3.2.conv2"
  top: "res3.2.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.2.conv2_relu"
  type: "ReLU"
  bottom: "res3.2.conv2_bn"
  top: "res3.2.conv2_bn"
}
layer {
  name: "res3.2.conv3"
  type: "Convolution"
  bottom: "res3.2.conv2_bn"
  top: "res3.2.conv3"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.2.conv3_bn"
  type: "BatchNorm"
  bottom: "res3.2.conv3"
  top: "res3.2.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.2.eltwise"
  type: "Eltwise"
  bottom: "res3.2.conv3_bn"
  bottom: "res3.1.eltwise"
  top: "res3.2.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3.2.relu"
  type: "ReLU"
  bottom: "res3.2.eltwise"
  top: "res3.2.eltwise"
}
layer {
  name: "res3.3.conv1"
  type: "Convolution"
  bottom: "res3.2.eltwise"
  top: "res3.3.conv1"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.3.conv1_bn"
  type: "BatchNorm"
  bottom: "res3.3.conv1"
  top: "res3.3.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.3.conv1_relu"
  type: "ReLU"
  bottom: "res3.3.conv1_bn"
  top: "res3.3.conv1_bn"
}
layer {
  name: "res3.3.conv2"
  type: "Convolution"
  bottom: "res3.3.conv1_bn"
  top: "res3.3.conv2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.3.conv2_bn"
  type: "BatchNorm"
  bottom: "res3.3.conv2"
  top: "res3.3.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.3.conv2_relu"
  type: "ReLU"
  bottom: "res3.3.conv2_bn"
  top: "res3.3.conv2_bn"
}
layer {
  name: "res3.3.conv3"
  type: "Convolution"
  bottom: "res3.3.conv2_bn"
  top: "res3.3.conv3"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.3.conv3_bn"
  type: "BatchNorm"
  bottom: "res3.3.conv3"
  top: "res3.3.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.3.eltwise"
  type: "Eltwise"
  bottom: "res3.3.conv3_bn"
  bottom: "res3.2.eltwise"
  top: "res3.3.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3.3.relu"
  type: "ReLU"
  bottom: "res3.3.eltwise"
  top: "res3.3.eltwise"
}
layer {
  name: "res3.4.conv1"
  type: "Convolution"
  bottom: "res3.3.eltwise"
  top: "res3.4.conv1"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.4.conv1_bn"
  type: "BatchNorm"
  bottom: "res3.4.conv1"
  top: "res3.4.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.4.conv1_relu"
  type: "ReLU"
  bottom: "res3.4.conv1_bn"
  top: "res3.4.conv1_bn"
}
layer {
  name: "res3.4.conv2"
  type: "Convolution"
  bottom: "res3.4.conv1_bn"
  top: "res3.4.conv2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.4.conv2_bn"
  type: "BatchNorm"
  bottom: "res3.4.conv2"
  top: "res3.4.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.4.conv2_relu"
  type: "ReLU"
  bottom: "res3.4.conv2_bn"
  top: "res3.4.conv2_bn"
}
layer {
  name: "res3.4.conv3"
  type: "Convolution"
  bottom: "res3.4.conv2_bn"
  top: "res3.4.conv3"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res3.4.conv3_bn"
  type: "BatchNorm"
  bottom: "res3.4.conv3"
  top: "res3.4.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.4.eltwise"
  type: "Eltwise"
  bottom: "res3.4.conv3_bn"
  bottom: "res3.3.eltwise"
  top: "res3.4.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3.4.relu"
  type: "ReLU"
  bottom: "res3.4.eltwise"
  top: "res3.4.eltwise"
}
#
# ResBlock4
#
layer {
  name: "res4.1.conv1"
  type: "Convolution"
  bottom: "res3.4.eltwise"
  top: "res4.1.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 2
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.1.conv1_bn"
  type: "BatchNorm"
  bottom: "res4.1.conv1"
  top: "res4.1.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.1.conv1_relu"
  type: "ReLU"
  bottom: "res4.1.conv1_bn"
  top: "res4.1.conv1_bn"
}
layer {
  name: "res4.1.conv2"
  type: "Convolution"
  bottom: "res4.1.conv1_bn"
  top: "res4.1.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.1.conv2_bn"
  type: "BatchNorm"
  bottom: "res4.1.conv2"
  top: "res4.1.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.1.conv2_relu"
  type: "ReLU"
  bottom: "res4.1.conv2_bn"
  top: "res4.1.conv2_bn"
}
layer {
  name: "res4.1.conv3"
  type: "Convolution"
  bottom: "res4.1.conv2_bn"
  top: "res4.1.conv3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.1.conv3_bn"
  type: "BatchNorm"
  bottom: "res4.1.conv3"
  top: "res4.1.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.1.skipConv"
  type: "Convolution"
  bottom: "res3.4.eltwise"
  top: "res4.1.skipConv"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 2
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.1.skipConv_bn"
  type: "BatchNorm"
  bottom: "res4.1.skipConv"
  top: "res4.1.skipConv_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.1.eltwise"
  type: "Eltwise"
  bottom: "res4.1.conv3_bn"
  bottom: "res4.1.skipConv_bn"
  top: "res4.1.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.1.relu"
  type: "ReLU"
  bottom: "res4.1.eltwise"
  top: "res4.1.eltwise"
}
layer {
  name: "res4.2.conv1"
  type: "Convolution"
  bottom: "res4.1.eltwise"
  top: "res4.2.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.2.conv1_bn"
  type: "BatchNorm"
  bottom: "res4.2.conv1"
  top: "res4.2.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.2.conv1_relu"
  type: "ReLU"
  bottom: "res4.2.conv1_bn"
  top: "res4.2.conv1_bn"
}
layer {
  name: "res4.2.conv2"
  type: "Convolution"
  bottom: "res4.2.conv1_bn"
  top: "res4.2.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.2.conv2_bn"
  type: "BatchNorm"
  bottom: "res4.2.conv2"
  top: "res4.2.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.2.conv2_relu"
  type: "ReLU"
  bottom: "res4.2.conv2_bn"
  top: "res4.2.conv2_bn"
}
layer {
  name: "res4.2.conv3"
  type: "Convolution"
  bottom: "res4.2.conv2_bn"
  top: "res4.2.conv3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.2.conv3_bn"
  type: "BatchNorm"
  bottom: "res4.2.conv3"
  top: "res4.2.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.2.eltwise"
  type: "Eltwise"
  bottom: "res4.2.conv3_bn"
  bottom: "res4.1.eltwise"
  top: "res4.2.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.2.relu"
  type: "ReLU"
  bottom: "res4.2.eltwise"
  top: "res4.2.eltwise"
}
layer {
  name: "res4.3.conv1"
  type: "Convolution"
  bottom: "res4.2.eltwise"
  top: "res4.3.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.3.conv1_bn"
  type: "BatchNorm"
  bottom: "res4.3.conv1"
  top: "res4.3.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.3.conv1_relu"
  type: "ReLU"
  bottom: "res4.3.conv1_bn"
  top: "res4.3.conv1_bn"
}
layer {
  name: "res4.3.conv2"
  type: "Convolution"
  bottom: "res4.3.conv1_bn"
  top: "res4.3.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.3.conv2_bn"
  type: "BatchNorm"
  bottom: "res4.3.conv2"
  top: "res4.3.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.3.conv2_relu"
  type: "ReLU"
  bottom: "res4.3.conv2_bn"
  top: "res4.3.conv2_bn"
}
layer {
  name: "res4.3.conv3"
  type: "Convolution"
  bottom: "res4.3.conv2_bn"
  top: "res4.3.conv3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.3.conv3_bn"
  type: "BatchNorm"
  bottom: "res4.3.conv3"
  top: "res4.3.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.3.eltwise"
  type: "Eltwise"
  bottom: "res4.3.conv3_bn"
  bottom: "res4.2.eltwise"
  top: "res4.3.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.3.relu"
  type: "ReLU"
  bottom: "res4.3.eltwise"
  top: "res4.3.eltwise"
}
layer {
  name: "res4.4.conv1"
  type: "Convolution"
  bottom: "res4.3.eltwise"
  top: "res4.4.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.4.conv1_bn"
  type: "BatchNorm"
  bottom: "res4.4.conv1"
  top: "res4.4.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.4.conv1_relu"
  type: "ReLU"
  bottom: "res4.4.conv1_bn"
  top: "res4.4.conv1_bn"
}
layer {
  name: "res4.4.conv2"
  type: "Convolution"
  bottom: "res4.4.conv1_bn"
  top: "res4.4.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.4.conv2_bn"
  type: "BatchNorm"
  bottom: "res4.4.conv2"
  top: "res4.4.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.4.conv2_relu"
  type: "ReLU"
  bottom: "res4.4.conv2_bn"
  top: "res4.4.conv2_bn"
}
layer {
  name: "res4.4.conv3"
  type: "Convolution"
  bottom: "res4.4.conv2_bn"
  top: "res4.4.conv3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.4.conv3_bn"
  type: "BatchNorm"
  bottom: "res4.4.conv3"
  top: "res4.4.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.4.eltwise"
  type: "Eltwise"
  bottom: "res4.4.conv3_bn"
  bottom: "res4.3.eltwise"
  top: "res4.4.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.4.relu"
  type: "ReLU"
  bottom: "res4.4.eltwise"
  top: "res4.4.eltwise"
}
layer {
  name: "res4.5.conv1"
  type: "Convolution"
  bottom: "res4.4.eltwise"
  top: "res4.5.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.5.conv1_bn"
  type: "BatchNorm"
  bottom: "res4.5.conv1"
  top: "res4.5.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.5.conv1_relu"
  type: "ReLU"
  bottom: "res4.5.conv1_bn"
  top: "res4.5.conv1_bn"
}
layer {
  name: "res4.5.conv2"
  type: "Convolution"
  bottom: "res4.5.conv1_bn"
  top: "res4.5.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.5.conv2_bn"
  type: "BatchNorm"
  bottom: "res4.5.conv2"
  top: "res4.5.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.5.conv2_relu"
  type: "ReLU"
  bottom: "res4.5.conv2_bn"
  top: "res4.5.conv2_bn"
}
layer {
  name: "res4.5.conv3"
  type: "Convolution"
  bottom: "res4.5.conv2_bn"
  top: "res4.5.conv3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.5.conv3_bn"
  type: "BatchNorm"
  bottom: "res4.5.conv3"
  top: "res4.5.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.5.eltwise"
  type: "Eltwise"
  bottom: "res4.5.conv3_bn"
  bottom: "res4.4.eltwise"
  top: "res4.5.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.5.relu"
  type: "ReLU"
  bottom: "res4.5.eltwise"
  top: "res4.5.eltwise"
}
layer {
  name: "res4.6.conv1"
  type: "Convolution"
  bottom: "res4.5.eltwise"
  top: "res4.6.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.6.conv1_bn"
  type: "BatchNorm"
  bottom: "res4.6.conv1"
  top: "res4.6.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.6.conv1_relu"
  type: "ReLU"
  bottom: "res4.6.conv1_bn"
  top: "res4.6.conv1_bn"
}
layer {
  name: "res4.6.conv2"
  type: "Convolution"
  bottom: "res4.6.conv1_bn"
  top: "res4.6.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.6.conv2_bn"
  type: "BatchNorm"
  bottom: "res4.6.conv2"
  top: "res4.6.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.6.conv2_relu"
  type: "ReLU"
  bottom: "res4.6.conv2_bn"
  top: "res4.6.conv2_bn"
}
layer {
  name: "res4.6.conv3"
  type: "Convolution"
  bottom: "res4.6.conv2_bn"
  top: "res4.6.conv3"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res4.6.conv3_bn"
  type: "BatchNorm"
  bottom: "res4.6.conv3"
  top: "res4.6.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.6.eltwise"
  type: "Eltwise"
  bottom: "res4.6.conv3_bn"
  bottom: "res4.5.eltwise"
  top: "res4.6.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.6.relu"
  type: "ReLU"
  bottom: "res4.6.eltwise"
  top: "res4.6.eltwise"
}
#
# ResBlock5
#
layer {
  name: "res5.1.conv1"
  type: "Convolution"
  bottom: "res4.6.eltwise"
  top: "res5.1.conv1"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 2
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res5.1.conv1_bn"
  type: "BatchNorm"
  bottom: "res5.1.conv1"
  top: "res5.1.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.1.conv1_relu"
  type: "ReLU"
  bottom: "res5.1.conv1_bn"
  top: "res5.1.conv1_bn"
}
layer {
  name: "res5.1.conv2"
  type: "Convolution"
  bottom: "res5.1.conv1_bn"
  top: "res5.1.conv2"
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res5.1.conv2_bn"
  type: "BatchNorm"
  bottom: "res5.1.conv2"
  top: "res5.1.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.1.conv2_relu"
  type: "ReLU"
  bottom: "res5.1.conv2_bn"
  top: "res5.1.conv2_bn"
}
layer {
  name: "res5.1.conv3"
  type: "Convolution"
  bottom: "res5.1.conv2_bn"
  top: "res5.1.conv3"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res5.1.conv3_bn"
  type: "BatchNorm"
  bottom: "res5.1.conv3"
  top: "res5.1.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.1.skipConv"
  type: "Convolution"
  bottom: "res4.6.eltwise"
  top: "res5.1.skipConv"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    stride: 2
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res5.1.skipConv_bn"
  type: "BatchNorm"
  bottom: "res5.1.skipConv"
  top: "res5.1.skipConv_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.1.eltwise"
  type: "Eltwise"
  bottom: "res5.1.conv3_bn"
  bottom: "res5.1.skipConv_bn"
  top: "res5.1.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res5.1.relu"
  type: "ReLU"
  bottom: "res5.1.eltwise"
  top: "res5.1.eltwise"
}
layer {
  name: "res5.2.conv1"
  type: "Convolution"
  bottom: "res5.1.eltwise"
  top: "res5.2.conv1"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res5.2.conv1_bn"
  type: "BatchNorm"
  bottom: "res5.2.conv1"
  top: "res5.2.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.2.conv1_relu"
  type: "ReLU"
  bottom: "res5.2.conv1_bn"
  top: "res5.2.conv1_bn"
}
layer {
  name: "res5.2.conv2"
  type: "Convolution"
  bottom: "res5.2.conv1_bn"
  top: "res5.2.conv2"
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res5.2.conv2_bn"
  type: "BatchNorm"
  bottom: "res5.2.conv2"
  top: "res5.2.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.2.conv2_relu"
  type: "ReLU"
  bottom: "res5.2.conv2_bn"
  top: "res5.2.conv2_bn"
}
layer {
  name: "res5.2.conv3"
  type: "Convolution"
  bottom: "res5.2.conv2_bn"
  top: "res5.2.conv3"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res5.2.conv3_bn"
  type: "BatchNorm"
  bottom: "res5.2.conv3"
  top: "res5.2.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.2.eltwise"
  type: "Eltwise"
  bottom: "res5.2.conv3_bn"
  bottom: "res5.1.eltwise"
  top: "res5.2.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res5.2.relu"
  type: "ReLU"
  bottom: "res5.2.eltwise"
  top: "res5.2.eltwise"
}
layer {
  name: "res5.3.conv1"
  type: "Convolution"
  bottom: "res5.2.eltwise"
  top: "res5.3.conv1"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res5.3.conv1_bn"
  type: "BatchNorm"
  bottom: "res5.3.conv1"
  top: "res5.3.conv1_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.3.conv1_relu"
  type: "ReLU"
  bottom: "res5.3.conv1_bn"
  top: "res5.3.conv1_bn"
}
layer {
  name: "res5.3.conv2"
  type: "Convolution"
  bottom: "res5.3.conv1_bn"
  top: "res5.3.conv2"
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res5.3.conv2_bn"
  type: "BatchNorm"
  bottom: "res5.3.conv2"
  top: "res5.3.conv2_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.3.conv2_relu"
  type: "ReLU"
  bottom: "res5.3.conv2_bn"
  top: "res5.3.conv2_bn"
}
layer {
  name: "res5.3.conv3"
  type: "Convolution"
  bottom: "res5.3.conv2_bn"
  top: "res5.3.conv3"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "msra"
      std: 0.010
    }
    bias_term: false
  }
}
layer {
  name: "res5.3.conv3_bn"
  type: "BatchNorm"
  bottom: "res5.3.conv3"
  top: "res5.3.conv3_bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.3.eltwise"
  type: "Eltwise"
  bottom: "res5.3.conv3_bn"
  bottom: "res5.2.eltwise"
  top: "res5.3.eltwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res5.3.relu"
  type: "ReLU"
  bottom: "res5.3.eltwise"
  top: "res5.3.eltwise"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res5.3.eltwise"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "pool2"
  top: "fc"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc"
  bottom: "label"
  top: "loss"
}